- job:
    name: docker-image-build
    project-type: flow
    description: |
      Building, testing and deploying Docker images.
    display-name: 'Docker image build'
    concurrent: false
    triggers:
      - gerrit:
          trigger-on:
              - patchset-created-event
          projects:
              - project-compare-type: 'PLAIN'
                project-pattern: 'abraverm/logstash-input-bugzilla'
                branches:
                  - branch-compare-type: 'PLAIN'
                    branch-pattern: 'ci'
                file-paths:
                  - compare-type: 'ANT'
                    pattern: '**/docker/**'
          skip-vote:
              unstable: true
              notbuilt: true
          trigger-for-unreviewed-patches: true
    node: master
    dsl: |
      guard {
        build("docker-build-node",
              gerrit_refspec: params["GERRIT_REFSPEC"],
              deploy: build.number
                )
        parallel (
          {
            build("docker-build-elk-host",
                  gerrit_refspec: params["GERRIT_REFSPEC"],
                  deploy: build.number)
            build("docker-test-elk",
                  gerrit_refspec: params["GERRIT_REFSPEC"],
                  deploy: build.number)
          },
          { retry ( 2 ) { build("docker-build-jjb",
                            gerrit_refspec: params["GERRIT_REFSPEC"],
                            deploy: build.number) }},
          { retry ( 2 ) { build("docker-build-ruby",
                            gerrit_refspec: params["GERRIT_REFSPEC"],
                            deploy: build.number) }}
        )
        build("docker-image-deploy", deploy: build.number)
      } rescue {
        build("docker-image-cleanup", deploy: build.number)
      }

- job:
    name: docker-build-node
    project-type: freestyle
    description: |
      Node is a base image which jenkins can run its job on.
    display-name: 'Docker build node image'
    concurrent: false
    node: docker
    scm:
      - logstash-input-bugzilla
    builders:
      - shell:
          !include-raw merge.sh
      - shell: |
          set +x
          pushd "${WORKSPACE}/logstash-input-bugzilla_${BUILD_NUMBER}/docker/node"
          if [ $(git diff --stat "HEAD^" -- . | wc -l) -gt 0 ]; then
            echo "============================"
            echo "Docker - Building Node Image"
            echo "============================"
            docker build -t "node_${deploy}" .
          else
            echo "Nothing changed"
          fi

- job:
    name: docker-build-elk-host
    project-type: freestyle
    description: |
      ELK host is a docker image with docker and other tool enabled for
      running docker inside docker.
    display-name: 'Docker build ELK-host image'
    concurrent: false
    node: docker
    scm:
      - logstash-input-bugzilla
    builders:
      - shell:
          !include-raw merge.sh
      - shell: |
          set +x
          pushd "${WORKSPACE}/logstash-input-bugzilla_${BUILD_NUMBER}/docker/ELK-host"
          if [ $(git diff --stat "HEAD^" -- . | wc -l) -gt 0 ] ||
             [ $(git diff --stat "HEAD^" -- ../node/ | wc -l) -gt 0 ]
          then
            echo "============================"
            echo "Docker - Building ELK-host Image"
            echo "============================"
            docker build -t "host_${deploy}" .
          else
            echo "Nothing changed"
          fi

- job:
    name: docker-test-elk
    project-type: freestyle
    description: |
      Sanity test for ELK suite environment.
    display-name: 'Docker ELK Test'
    concurrent: false
    node: docker
    scm:
      - logstash-input-bugzilla
    builders:
      - shell:
          !include-raw merge.sh
      - shell:
          !include-raw ELK.sh

- job:
    name: docker-build-ruby
    project-type: freestyle
    description: |
      Ruby node is an image for running code analysis on ruby code.
    display-name: 'Docker build ruby node image'
    concurrent: false
    node: docker
    scm:
      - logstash-input-bugzilla
    builders:
      - shell:
          !include-raw merge.sh
      - shell: |
          set +x
          pushd "${WORKSPACE}/logstash-input-bugzilla_${BUILD_NUMBER}/docker/ruby"
          if [ $(git diff --stat "HEAD^" -- . | wc -l) -gt 0 ] ||
             [ $(git diff --stat "HEAD^" -- ../node/ | wc -l) -gt 0 ]
          then
            echo "================================="
            echo "Docker - Building Ruby Node Image"
            echo "================================="
            docker build -t "ruby_${deploy}" .
          else
            echo "Nothing changed"
          fi

- job:
    name: docker-build-jjb
    project-type: freestyle
    description: |
      Jenkins-Job-Builder is an image for testing jenkins jobs defenition.
    display-name: 'Docker build JJB node image'
    concurrent: false
    node: docker
    scm:
      - logstash-input-bugzilla
    builders:
      - shell:
          !include-raw merge.sh
      - shell: |
          set +x
          pushd "${WORKSPACE}/logstash-input-bugzilla_${BUILD_NUMBER}/docker/jjb"
          if [ $(git diff-index --name-only HEAD | wc -l) -gt 0 ] ||
             [ $(git diff --stat "HEAD^" -- ../node/ | wc -l) -gt 0 ]
          then
            echo "============================"
            echo "Docker - Building JJB Node Image"
            echo "============================"
            docker build -t "jjb_${deploy}" .
          else
            echo "Nothing changed"
          fi

- job:
    name: docker-image-deploy
    project-type: freestyle
    description: |
      Deploy built docker images.
    display-name: 'Docker image deploy'
    concurrent: false
    node: docker
    builders:
      - shell: |
          set -x
          docker tag -f "jjb_${deploy}" abraverm/jenkins:jjb
          docker tag -f "ruby_${deploy}" abraverm/jenkins:ruby
          docker tag -f "node_${deploy}" abraverm/jenkins:node
          docker tag -f "host_${deploy}" abraverm/jenkins:docker

- job:
    name: docker-image-cleanup
    project-type: freestyle
    description: |
      Cleanup leftovers of image deployment.
    display-name: 'Docker image cleanup'
    concurrent: false
    node: docker
    builders:
      - shell: |
          set -x
          docker rmi "jjb_${deploy}" "ruby_${deploy}" "host_${deploy}" "node_${deploy}" || echo "Some images were not found"
